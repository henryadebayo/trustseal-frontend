version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trustseal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  ipfs:
    image: ipfs/kubo:latest
    ports:
      - "4001:4001" # Swarm port
      - "5001:5001" # API port
      - "8080:8080" # Gateway port
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_staging:/export
    healthcheck:
      test: [ "CMD", "ipfs", "version" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - IPFS_PROFILE=server

  backend:
    build: .
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: trustseal
      DB_USER: postgres
      DB_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
      IPFS_HOST: ipfs
      IPFS_PORT: 5001
      IPFS_PROTOCOL: http
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      ipfs:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  ipfs_data:
  ipfs_staging:
